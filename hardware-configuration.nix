# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}: {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
    ./amdgpu_patch.nix
  ];

  boot.initrd.availableKernelModules = ["nvme" "xhci_pci" "ahci" "usbhid" "usb_storage" "sd_mod"];
  boot.initrd.kernelModules = ["amdgpu"];
  boot.kernelModules = ["kvm-amd"];
  boot.extraModulePackages = [];
  boot.kernelParams = [
    "amd_pstate.enable=1"
    "video=card0-HDMI-A-1:1920x1080@60"
  ];
  powerManagement.cpuFreqGovernor = "performance";
  xserver.videoDrivers = ["amdgpu"];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/c70605f2-f326-40b3-8f91-aea0e263bf42";
    fsType = "ext4";
  };

  swapDevices = [
    {device = "/dev/disk/by-uuid/79fe1a4f-be73-4ac4-a0f7-eccb179318f6";}
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp9s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;

  #24.11
  hardware.graphics.extraPackages = with pkgs; [
    rocmPackages.clr.icd
    amdvlk
  ];
  # For 32 bit applications
  hardware.graphics.extraPackages32 = with pkgs; [
    driversi686Linux.amdvlk
  ];

  hardware.graphics = {
    enable = true;
    enable32Bit = true;
  };
  #hardware.opengl.driSupport = true; # This is already enabled by default

  # CPU FUCKERY
  hardware.cpu.amd.ryzen-smu.enable = true;
  environment.systemPackages = [pkgs.ryzenadj pkgs.lact];
  systemd.packages = with pkgs; [lact];
  systemd.services.lactd.wantedBy = ["multi-user.target"];
}
